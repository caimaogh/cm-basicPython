#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# 字符串是以单引号'或双引号"括起来的任意文本，''或""本身只是一种表示方式，不是字符串的一部分，
# 如果'本身也是一个字符，那就可以用""括起来，如果字符串内部既包含'又包含"可以用转义字符\来标识
print('I\'m \"OK\"!')   #print('I\'m \"OK\"!')
print('I\'m learning \n Python.')  #   \n表示换行 换行就是把滚筒卷一格，不改变水平位置
print('I\'m learning \r Python.')  #   \r表示换行 回车就是把水平位置复位，不卷动滚筒
print('I\'m learning \t Python.')  #   \t表示制表符
print('\\\n\\')

# 如果字符串里面有很多字符都需要转义，就需要加很多\，为了简化，Python还允许用r''表示''内部的字符串默认不转义
print(r'\\\n\\')

# 如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用'''...'''的格式表示多行内容
# 多行字符串'''...'''还可以在前面加上r使用
print('''line1
line2
line3''')

# 在Python中，可以直接用True、False表示(注意大小写)
print(1>2 or 3<4 and not 1==1)

# 空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。

# 在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量
# 这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。
a = 'ABC'  # 解释器创建了字符串'ABC'和变量a，并把a指向'ABC'：
b = a      # 解释器创建了变量b，并把b指向a指向的字符串'ABC'：
a = 'XYZ'  # 解释器创建了字符串'XYZ'，并把a的指向改为'XYZ'，但b并没有更改：
print('b=',b,'a=',a)

# 在Python中，通常用全部大写的变量名表示常量：
# /除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数：
# 还有一种除法是//，称为地板除，两个整数的除法仍然是整数：
# Python还提供一个余数运算%，可以得到两个整数相除的余数：